{"version":3,"sources":["globalStyles.js","components/images/gridy.svg","components/SpotifyGetTopSongs/SpotifyGetTopSongs.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","CustomButtonRoot","styled","spotify","other","hideMe","showGrid","ContainerLogo","div","toggle","InstructionsContainer","show","ErrorMessage","p","Box","checked","SpacingSmall","SpacingMedium","SpotifyGetTopSongs","props","useState","token","setToken","standBy","setStandBy","setShowGrid","setToggle","loading","setLoading","errorState","setErrorState","isLogged","setIsLogged","gotPlaylist","setGotPlaylist","isDone","setIsDone","useEffect","localStorage","getItem","className","variant","onClick","handleLogin","items","map","song","src","track","album","href","images","url","alt","e","preventDefault","sh","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","concat","console","log","disabled","axios","get","headers","Authorization","then","response","data","context","uri","substring","catch","error","logo","characters","state","result","charactersLength","i","charAt","generateRandomString","encodeURIComponent","App","window","location","hash","split","reduce","accumulater","currentValue","key","value","access_token","expires_in","token_type","clear","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.700fcae4.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n    *{\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: sans-serif; \r\n        overflow: hidden;\r\n    }    \r\n\r\n    body {\r\n        background-color: #000;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        -webkit-overflow-scrolling: auto;\r\n        overflow: hidden;\r\n\r\n        &::-webkit-scrollbar {\r\n        display: none;\r\n        }\r\n    }\r\n\r\n    button:focus {\r\n    outline: none;\r\n    }\r\n\r\n    img {\r\n      position: relative;\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n\r\n    p {\r\n      display: inline-block;\r\n      line-height: 2.65em;\r\n      margin-left: 1em;\r\n      color: #555;\r\n    }\r\n\r\n    .ps {\r\n      margin-left: 0em;\r\n    }\r\n\r\n    .App {\r\n      width: 100%;\r\n      height: 100vh;\r\n      text-align: center;\r\n      position: absolute;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .for-grid {\r\n      height: 9.07vw;\r\n      width: 9.07vw;\r\n      object-fit: cover;\r\n      transition: 0.8s;\r\n      opacity: 1;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .for-grid:hover{\r\n      padding: 0.5em;\r\n      opacity: 0.25;\r\n    }\r\n\r\n    .container-for-grid {\r\n      display: inline-block;\r\n      vertical-align: top;\r\n    }\r\n\r\n    .containerAnimate {      \r\n      -webkit-animation-name: glide;\r\n      -webkit-animation-duration: 30000ms;\r\n      -webkit-animation-iteration-count: infinite;\r\n      -webkit-animation-timing-function: linear;\r\n      -moz-animation-name: glide;\r\n      -moz-animation-duration: 30000ms;\r\n      -moz-animation-iteration-count: infinite;\r\n      -moz-animation-timing-function: linear;\r\n      -ms-animation-name: glide;\r\n      -ms-animation-duration: 30000ms;\r\n      -ms-animation-iteration-count: infinite;\r\n      -ms-animation-timing-function: linear;\r\n      animation-name: glide;\r\n      animation-duration: 30000ms;\r\n      animation-iteration-count: infinite;\r\n      animation-timing-function: linear;  \r\n    }\r\n\r\n    .Results {\r\n      width: 100%;\r\n      height: 100%;\r\n      text-align: center;\r\n      border: 1px solid #bbb;\r\n      border-radius: 0.25em;\r\n      padding: 0.75em;\r\n      margin: 4em auto;\r\n      position: relative;\r\n    }\r\n\r\n    .img-container {\r\n      width: 100%;    \r\n    }\r\n\r\n    .container-logo { \r\n      position: absolute;\r\n      display: block;\r\n      background-color: #ff0;\r\n      z-index: 3;\r\n      bottom: 0;\r\n      width: 14.5em;\r\n    }\r\n\r\n    .for-logo {\r\n      width: 100%;\r\n    }\r\n\r\n    @media screen and (max-width: 991px) {\r\n      .for-grid {\r\n        height: 20vw;\r\n        width: 20vw;\r\n      }\r\n    }\r\n\r\n    @keyframes glide {\r\n      0%   {margin-top: 0vw;}\r\n      25%  {margin-top: -12.5vw;}\r\n      50%  {margin-top: -25vw;}\r\n      75%  {margin-top: -12.5vw;}\r\n      100% {margin-top: 0vw;}\r\n    }\r\n`\r\n\r\nexport const CustomButtonRoot = styled('button')`\r\n  background-color: ${({ spotify }) => (spotify ? '#1ed860' : '#002eff')};\r\n  background-color: ${({ other }) => (other ? '#e600e6' : '')};\r\n  min-width: 6em;\r\n  padding: 15px 20px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1em;\r\n  cursor: pointer;\r\n  border: none;\r\n  position: absolute;\r\n  z-index: 2;\r\n  bottom: 0;\r\n  transition: 0.4s;\r\n  display: ${({ hideMe }) => (hideMe ? 'none' : 'block')};\r\n  opacity: ${({ showGrid }) => (showGrid ? '0' : '1')};\r\n  margin-left: ${({ spotify }) => (spotify ? '16.5em' : '22.45em')};\r\n\r\n  &:hover {\r\n    background-color: ${({ spotify }) => (spotify ? '#1ca14b' : '#031cac')} ;\r\n    background-color: ${({ other }) => (other ? '#b300b3' : '')};\r\n    opacity: ${({ showGrid }) => (showGrid ? '1' : '1')};\r\n  }\r\n\r\n  &.active {\r\n    background-color: #004386;\r\n  }\r\n\r\n  &.disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  @media screen and (max-width: 991px) {\r\n    min-width: 5.35em;\r\n    opacity: ${({ showGrid }) => (showGrid ? '0.4' : '1')};\r\n  }\r\n`\r\n\r\nexport const ContainerLogo = styled.div`\r\n  position: absolute;\r\n  display: block;\r\n  background-color: #ff0;\r\n  z-index: 3;\r\n  bottom: 0.01em;\r\n  width: 14.5em;\r\n  opacity: ${({ toggle }) => (toggle ? '0' : '1')};\r\n  cursor: pointer;\r\n  transition: 0.4s;\r\n\r\n  &:hover {\r\n    opacity: ${({ toggle }) => (toggle ? '0.4' : '0.9')};\r\n  }\r\n`\r\n\r\nexport const InstructionsContainer = styled.div`\r\n  opacity: ${({ show }) => (show ? '0' : '1')};\r\n  text-align: left;\r\n  position: absolute;\r\n  display: block;\r\n  width: 40%;\r\n  margin-left: 35%;\r\n  height: 20em;\r\n  margin-top: 10%;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n  display: inline-block;\r\n  line-height: 2.65em;\r\n  margin-left: 1em;\r\n  color: #dc0a29;\r\n  margin-left: 0em;\r\n`\r\n\r\nexport const Box = styled.div`\r\n  display: inline-block;\r\n  background-color: ${({ checked }) => (checked ? '#1ed860' : '#555')};\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 1em;\r\n  padding: 1em 1.1em;\r\n`\r\n\r\nexport const SpacingSmall = styled.div`\r\n  height: 0.25em;\r\n`\r\n\r\nexport const SpacingMedium = styled.div`\r\n  height: 1.5em;\r\n`\r\n\r\nexport const SpacingLarge = styled.div`\r\n  height: 3em;\r\n`\r\n  ;\r\n\r\nexport default GlobalStyle","export default __webpack_public_path__ + \"static/media/gridy.cb93892b.svg\";","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport * as s from \"../../globalStyles\";\r\nimport logo from '../images/gridy.svg'\r\n\r\nconst SpotifyGetTopSongs = props => {\r\n    const [token, setToken] = useState(\"\");\r\n    const [standBy, setStandBy] = useState([]);\r\n    const [showGrid, setShowGrid] = useState(false);\r\n    const [toggle, setToggle] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorState, setErrorState] = useState(\"\");\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [gotPlaylist, setGotPlaylist] = useState(false);\r\n    const [isDone, setIsDone] = useState(false);\r\n\r\n    function shuffle(array) {\r\n        let currentIndex = array.length, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (currentIndex !== 0) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n\r\n            // And swap it with the current element.\r\n            [array[currentIndex], array[randomIndex]] = [\r\n                array[randomIndex], array[currentIndex]];\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"accessToken\")) {\r\n            setToken(localStorage.getItem(\"accessToken\"));\r\n            setIsLogged(true);\r\n        }\r\n    }, []);\r\n\r\n    const handleCurrentPlaylist = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        axios\r\n            .get(`https://api.spotify.com/v1/me/player?market=us`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + token\r\n                },\r\n            })\r\n            .then((response) => {\r\n                return axios\r\n                    .get(`https://api.spotify.com/v1/playlists/${response.data.context.uri.substring(17)}/tracks?market=us&fields=(items(track(album(images))))&limit=99&offset=0`, {\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + token\r\n                        },\r\n                    })\r\n                    .then((response) => {\r\n                        console.log(response.data);\r\n                        setStandBy(response.data);\r\n                        setLoading(false);\r\n                        setGotPlaylist(true);\r\n                        setErrorState(\"\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                        setErrorState(\"The playlist you're listening to has offline songs\");\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setErrorState(\"You're not listening to a playlist right now :/\");\r\n            });\r\n    }\r\n\r\n    const build = (e) => {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        let sh = shuffle(standBy.items);\r\n\r\n        sh = sh.concat(sh);\r\n        console.log(\"doubled\", sh);\r\n\r\n        setShowGrid(true);\r\n        setLoading(false);\r\n        setIsDone(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <s.InstructionsContainer show={showGrid}>\r\n                <s.Box checked={isLogged}>1</s.Box>\r\n                    <p>Log in with Spotify</p>\r\n                    <s.SpacingSmall />\r\n                <s.Box checked={gotPlaylist}>2</s.Box>\r\n                    <p>Get the currently playing playlist</p>\r\n                    <s.SpacingSmall />\r\n                <s.Box checked={isDone}>3</s.Box>\r\n                    <p>Build the grid!</p>\r\n                    <s.SpacingMedium />\r\n\r\n                <p className=\"ps\">↙ You can always rebuild, the button is just hiding at the bottom</p>\r\n                <s.SpacingSmall />\r\n                <s.ErrorMessage>{errorState}</s.ErrorMessage>\r\n            </s.InstructionsContainer>\r\n\r\n            {token === \"\" ?\r\n                <s.CustomButtonRoot variant=\"outlined\" onClick={() => props.handleLogin()} spotify={true}>Log In</s.CustomButtonRoot>\r\n                :\r\n                <s.CustomButtonRoot variant=\"outlined\" onClick={() => props.handleLogin()} spotify={true} showGrid={showGrid}>⟳</s.CustomButtonRoot>\r\n            }\r\n\r\n            {standBy.items || isLogged === false ?\r\n                (<div className=\"containerAnimate\">\r\n                    {showGrid ? (standBy.items.map((song) => (\r\n                        <>\r\n                            <div className=\"container-for-grid\">\r\n                                <img className=\"for-grid\" src={song.track.album.href === null ? null : song.track.album.images[1].url} alt={\"artwork\"} />\r\n                            </div>\r\n                        </>\r\n                    ))) : (\r\n                        <s.CustomButtonRoot variant=\"outlined\" onClick={build} disabled={loading} other={true} hideMe={!gotPlaylist}>Build Grid</s.CustomButtonRoot>\r\n                    )}\r\n                </div>)\r\n                :\r\n                <s.CustomButtonRoot variant=\"outlined\" onClick={handleCurrentPlaylist}>Get Current Playlist</s.CustomButtonRoot>\r\n            }\r\n\r\n            <s.ContainerLogo onClick={() => setToggle(!toggle)} toggle={toggle}>\r\n                <img className=\"for-logo\" src={logo} alt={\"logo\"} />\r\n            </s.ContainerLogo>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SpotifyGetTopSongs;","import React, { useEffect } from 'react';\nimport GlobalStyle from './globalStyles';\nimport SpotifyGetTopSongs from './components/SpotifyGetTopSongs/SpotifyGetTopSongs';\n\nconst characters ='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nfunction generateRandomString(length) {\n    let result = ' ';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n}\n\nvar client_id = '815a413830104996ac5818ea2ab67772';\nvar redirect_uri = 'https://isaul-garcia.github.io/gridy-spotify/';\n\nvar state = generateRandomString(16);\n\nvar scope = 'user-read-playback-state playlist-read-private';\n\nvar url = 'https://accounts.spotify.com/authorize';\nurl += '?response_type=token';\nurl += '&client_id=' + encodeURIComponent(client_id);\nurl += '&scope=' + encodeURIComponent(scope);\nurl += '&redirect_uri=' + encodeURIComponent(redirect_uri);\nurl += '&state=' + encodeURIComponent(state);\n\nconst getReturnedParamsFromSpotifyAuth = (hash) => {\n  const stringAfterHashtag = hash.substring(1);\n  const paramsInUrl = stringAfterHashtag.split(\"&\");\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\n    const [key, value] = currentValue.split(\"=\");\n    accumulater[key] = value;\n    return accumulater;\n  }, {});\n\n  return paramsSplitUp;\n};\n\n\nfunction App() {\n  useEffect(() => {\n    if (window.location.hash) {\n      const {\n        access_token, \n        expires_in, \n        token_type\n      } = getReturnedParamsFromSpotifyAuth(window.location.hash);\n\n      localStorage.clear();\n      localStorage.setItem(\"accessToken\", access_token);\n      localStorage.setItem(\"tokenType\", token_type);\n      localStorage.setItem(\"expiresIn\", expires_in);\n    }\n  });\n\n  const handleLogin = () => {\n    window.location = `${url}`;\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <div className=\"App\">\n          <SpotifyGetTopSongs handleLogin={handleLogin}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}